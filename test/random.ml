(****************************************************************)
(*                                                              *)
(*           Copyright r6eve 2019 -                             *)
(*  Distributed under the Boost Software License, Version 1.0.  *)
(*     (See accompanying file LICENSE_1_0.txt or copy at        *)
(*           https://www.boost.org/LICENSE_1_0.txt)             *)
(*                                                              *)
(****************************************************************)

open Orandom.Random

let random_seed = 0xA12EA88

(** Test suite is generated by the following Java codes. *)

(**
```java
final Random rnd = new Random();
rnd.setSeed(random_seed);
for (int i = 0; i < 10; ++i) { System.err.println(rnd.nextBoolean()); }
```
*)
let next_boolean_test () =
  let expected = [false; true; true; true; false; true; true; true; true; false] in
  Random.set_seed random_seed;
  expected
  |> List.iter @@ fun e ->
    assert (e = Random.next_boolean ())

(**
```java
final Random rnd = new Random();
rnd.setSeed(random_seed);
final byte[] bs = new byte[10];
rnd.nextBytes(bs);
for (int i = 0; i < bs.length; ++i) { System.err.println(bs[i]); }
```
*)
let next_bytes_test () =
  let expected = [-35; 104; -77; 41; -62; -74; -20; -96; -66; -1] in
  Random.set_seed random_seed;
  let ba = Random.next_bytes @@ Array.make 10 50 in
  expected
  |> List.iteri @@ fun i e ->
    assert (e = ba.(i))

(**
```java
final Random rnd = new Random();
rnd.setSeed(random_seed);
for (int i = 0; i < 10; ++i) { System.err.println(rnd.nextInt()); }
```
*)
let next_int_test () =
  let expected = [699623645; -1595099454; -1287389250; -1685747256; 1682232222;
                  -913754311; -574631589; -119104651; -1773027241; 1347232330] in
  Random.set_seed random_seed;
  expected
  |> List.iter @@ fun e ->
    assert (e = Random.next_int Unit)

(**
```java
final Random rnd = new Random();
rnd.setSeed(random_seed);
for (int i = 0; i < 10; ++i) { System.err.println(rnd.nextInt(10)); }
```
*)
let next_int_bound_test () =
  let _expected = [2; 1; 3; 0; 1; 2; 3; 2; 7; 5] in
  Random.set_seed random_seed;
  ()

(**
```java
final Random rnd = new Random();
rnd.setSeed(random_seed);
for (int i = 0; i < 10; ++i) { System.err.println(rnd.nextDouble()); }
```
*)
let next_float_test () =
  let expected = [0.16289382619577597; 0.7002563269064781; 0.391675215769559;
                  0.8662081654707906; 0.5871849255811716; 0.795985400090248;
                  0.8753358845961806; 0.5779306167183001; 0.25412226823745343;
                  0.6590125741968693] in
  Random.set_seed random_seed;
  expected
  |> List.iter @@ fun e ->
    assert (Util.same_float_p e @@ Random.next_float ())

(**
```java
final Random rnd = new Random();
rnd.setSeed(random_seed);
for (int i = 0; i < 10; ++i) { System.err.println(rnd.nextGaussian()); }
```
*)
let next_gaussian_test () =
  let expected = [-0.8477761452662856; 0.5036174062731802; -0.29448804340345225;
                  0.9955609595163628; 0.39261781282371044; 1.3329040500584017;
                  1.0093628600758726; 0.20957300755532526; -1.2284538576703976;
                  0.7944583219878215] in
  Random.set_seed random_seed;
  expected
  |> List.iter @@ fun e ->
    assert (Util.same_float_p e @@ Random.next_gaussian ())

(**
```java
final Random rnd = new Random();
rnd.setSeed(random_seed);
rnd.ints().limit(10).forEach(e -> System.err.println(e));
```
*)
let ints_test () =
  let expected = [699623645; -1595099454; -1287389250; -1685747256; 1682232222;
                  -913754311; -574631589; -119104651; -1773027241; 1347232330] in
  Random.set_seed random_seed;
  let s = Random.ints () in
  expected
  |> List.iter @@ fun e ->
    assert (e = Stream.next s)

(**
```java
final Random rnd = new Random();
rnd.setSeed(random_seed);
rnd.ints(10L).forEach(e -> System.err.println(e));
```
*)
let ints_streamsize_test () =
  let _expected = [699623645; -1595099454; -1287389250; -1685747256; 1682232222;
                  -913754311; -574631589; -119104651; -1773027241; 1347232330] in
  Random.set_seed random_seed;
  ()

(**
```java
final Random rnd = new Random();
rnd.setSeed(random_seed);
rnd.ints(1, 5).limit(10).forEach(e -> System.err.println(e));
```
*)
let ints_range_test () =
  let _expected = [1; 3; 3; 3; 2; 4; 4; 4; 3; 2] in
  Random.set_seed random_seed;
  ()

(**
```java
final Random rnd = new Random();
rnd.setSeed(random_seed);
rnd.ints(10L, 1, 5).forEach(e -> System.err.println(e));
```
*)
let ints_streamsize_and_range_test () =
  let _expected = [1; 3; 3; 3; 2; 4; 4; 4; 3; 2] in
  Random.set_seed random_seed;
  ()

(**
```java
final Random rnd = new Random();
rnd.setSeed(random_seed);
rnd.doubles().limit(10).forEach(e -> System.err.println(e));
```
*)
let floats_test () =
  let expected = [0.16289382619577597; 0.7002563269064781; 0.391675215769559;
                  0.8662081654707906; 0.5871849255811716; 0.795985400090248;
                  0.8753358845961806; 0.5779306167183001; 0.25412226823745343;
                  0.6590125741968693] in
  Random.set_seed random_seed;
  let s = Random.floats () in
  expected
  |> List.iter @@ fun e ->
    assert (Util.same_float_p e @@ Stream.next s)

(**
```java
final Random rnd = new Random();
rnd.setSeed(random_seed);
rnd.doubles(10L).forEach(e -> System.err.println(e));
```
*)
let floats_streamsize_test () =
  let _expected = [0.16289382619577597; 0.7002563269064781; 0.391675215769559;
                  0.8662081654707906; 0.5871849255811716; 0.795985400090248;
                  0.8753358845961806; 0.5779306167183001; 0.25412226823745343;
                  0.6590125741968693] in
  Random.set_seed random_seed;
  ()

(**
```java
final Random rnd = new Random();
rnd.setSeed(random_seed);
rnd.doubles(1.0, 5.0).limit(10).forEach(e -> System.err.println(e));
```
*)
let floats_range_test () =
  let _expected = [1.6515753047831039; 3.8010253076259124; 2.566700863078236;
                  4.464832661883163; 3.3487397023246865; 4.183941600360992;
                  4.501343538384722; 3.3117224668732006; 2.0164890729498137;
                  3.6360502967874773] in
  Random.set_seed random_seed;
  ()

(**
```java
final Random rnd = new Random();
rnd.setSeed(random_seed);
rnd.doubles(10L, 1.0, 5.0).forEach(e -> System.err.println(e));
```
*)
let floats_streamsize_and_range_test () =
  let _expected = [1.6515753047831039; 3.8010253076259124; 2.566700863078236;
                  4.464832661883163; 3.3487397023246865; 4.183941600360992;
                  4.501343538384722; 3.3117224668732006; 2.0164890729498137;
                  3.6360502967874773] in
  Random.set_seed random_seed;
  ()

let () =
  next_boolean_test ();
  next_bytes_test ();
  next_int_test ();
  next_int_bound_test ();
  next_float_test ();
  next_gaussian_test ();
  ints_test ();
  ints_streamsize_test ();
  ints_range_test ();
  ints_streamsize_and_range_test ();
  floats_test ();
  floats_streamsize_test ();
  floats_range_test ();
  floats_streamsize_and_range_test ()
